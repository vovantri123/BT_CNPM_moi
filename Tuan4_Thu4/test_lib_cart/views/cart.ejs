<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Gi·ªè h√†ng - Test Lib Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: {
                500: '#3B82F6',
                600: '#2563EB',
                700: '#1D4ED8',
              },
            },
          },
        },
      };
    </script>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b">
      <div class="container mx-auto px-4 py-4">
        <div class="flex justify-between items-center">
          <h1 class="text-2xl font-bold text-gray-900">üõí Test Lib Cart</h1>
          <div class="flex items-center space-x-4">
            <%- UIComponents.button({ text: '‚Üê Quay l·∫°i trang ch·ªß', variant:
            'secondary', onClick: "window.location.href='/'" }) %>
          </div>
        </div>
      </div>
    </header>

    <div class="container mx-auto px-4 py-8">
      <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h1>
        <% if (cartSummary.items.length > 0) { %> <%- UIComponents.button({
        text: 'X√≥a t·∫•t c·∫£', variant: 'danger', onClick: 'clearCart()' }) %> <% }
        %>
      </div>

      <div class="grid lg:grid-cols-3 gap-8">
        <!-- Cart Items -->
        <div class="lg:col-span-2">
          <% if (cartSummary.items.length === 0) { %>
          <div class="bg-white rounded-lg shadow-sm border p-12 text-center">
            <div class="text-6xl mb-4">üõí</div>
            <h2 class="text-2xl font-semibold text-gray-600 mb-4">
              Gi·ªè h√†ng tr·ªëng
            </h2>
            <p class="text-gray-500 mb-6">
              H√£y th√™m m·ªôt s·ªë s·∫£n ph·∫©m v√†o gi·ªè h√†ng c·ªßa b·∫°n
            </p>
            <%- UIComponents.button({ text: 'Kh√°m ph√° s·∫£n ph·∫©m', variant:
            'primary', onClick: "window.location.href='/'" }) %>
          </div>
          <% } else { %>
          <div class="space-y-4">
            <% cartSummary.items.forEach(item => { %>
            <div
              id="cart-item-<%= item._id %>"
              class="bg-white rounded-lg shadow-sm border p-6"
            >
              <div class="flex items-center space-x-4">
                <div class="flex-shrink-0">
                  <img
                    src="<%= item.image || '/placeholder-product.png' %>"
                    alt="<%= item.productName %>"
                    class="w-20 h-20 object-cover rounded-lg"
                  />
                </div>
                <div class="flex-1">
                  <h3 class="text-lg font-semibold text-gray-900">
                    <%= item.productName %>
                  </h3>
                  <p class="text-gray-600">
                    <%= item.price.toLocaleString('vi-VN') %> VNƒê
                  </p>
                </div>
                <div class="flex items-center space-x-2">
                  <%- UIComponents.button({ text: '-', size: 'sm', onClick:
                  `updateQuantity('${item._id}', ${item.quantity - 1})` }) %>
                  <span
                    class="px-3 py-1 bg-gray-100 rounded text-center min-w-[50px] font-medium"
                  >
                    <%= item.quantity %>
                  </span>
                  <%- UIComponents.button({ text: '+', size: 'sm', onClick:
                  `updateQuantity('${item._id}', ${item.quantity + 1})` }) %>
                </div>
                <div class="text-right">
                  <p class="text-lg font-semibold text-primary-600">
                    <%= (item.price * item.quantity).toLocaleString('vi-VN') %>
                    VNƒê
                  </p>
                  <%- UIComponents.button({ text: 'üóëÔ∏è X√≥a', variant: 'danger',
                  size: 'sm', onClick: `removeItem('${item._id}')` }) %>
                </div>
              </div>
            </div>
            <% }); %>
          </div>
          <% } %>
        </div>

        <!-- Cart Summary -->
        <% if (cartSummary.items.length > 0) { %>
        <div class="lg:col-span-1">
          <div class="bg-white rounded-lg shadow-sm border p-6 sticky top-4">
            <h2 class="text-xl font-semibold mb-4">üìä T·ªïng k·∫øt ƒë∆°n h√†ng</h2>
            <div class="space-y-3">
              <div class="flex justify-between">
                <span>S·ªë l∆∞·ª£ng s·∫£n ph·∫©m:</span>
                <span class="font-semibold"><%= cartSummary.totalItems %></span>
              </div>
              <div class="flex justify-between">
                <span>T·∫°m t√≠nh:</span>
                <span class="font-semibold">
                  <%= cartSummary.totalPrice.toLocaleString('vi-VN') %> VNƒê
                </span>
              </div>
              <div class="flex justify-between">
                <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                <span class="text-green-600 font-medium">Mi·ªÖn ph√≠</span>
              </div>
              <hr class="my-4" />
              <div class="flex justify-between text-lg font-bold">
                <span>T·ªïng c·ªông:</span>
                <span class="text-primary-600">
                  <%= cartSummary.totalPrice.toLocaleString('vi-VN') %> VNƒê
                </span>
              </div>
            </div>
            <div class="mt-6 space-y-3">
              <%- UIComponents.button({ text: 'üí≥ Thanh to√°n', variant:
              'primary', className: 'w-full', onClick: 'checkout()' }) %> <%-
              UIComponents.button({ text: 'üîÑ C·∫≠p nh·∫≠t gi·ªè h√†ng', variant:
              'secondary', className: 'w-full', onClick:
              'window.location.reload()' }) %>
            </div>
          </div>
        </div>
        <% } %>
      </div>
    </div>

    <!-- Loading overlay -->
    <div
      id="loading"
      class="fixed inset-0 bg-black bg-opacity-50 justify-center items-center hidden"
    >
      <div class="bg-white rounded-lg p-6 text-center">
        <div
          class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4"
        ></div>
        <p>ƒêang x·ª≠ l√Ω...</p>
      </div>
    </div>

    <script>
      // Show/hide loading
      function showLoading() {
        const loading = document.getElementById('loading');
        loading.classList.remove('hidden');
        loading.classList.add('flex');
      }

      function hideLoading() {
        const loading = document.getElementById('loading');
        loading.classList.add('hidden');
        loading.classList.remove('flex');
      }

      // Cart JavaScript functions
      async function updateQuantity(itemId, newQuantity) {
        if (newQuantity <= 0) {
          removeItem(itemId);
          return;
        }

        showLoading();
        try {
          // S·ª≠ d·ª•ng API t·ª´ th∆∞ vi·ªán
          const response = await fetch('/shop/api/cart/' + itemId, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ quantity: newQuantity }),
          });

          const data = await response.json();
          if (data.success) {
            showNotification('ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng!', 'success');
            setTimeout(() => window.location.reload(), 1000);
          } else {
            showNotification(data.message || 'C√≥ l·ªói x·∫£y ra', 'error');
          }
        } catch (error) {
          console.error('Error updating quantity:', error);
          showNotification('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng', 'error');
        } finally {
          hideLoading();
        }
      }

      async function removeItem(itemId) {
        if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?')) return;

        showLoading();
        try {
          const response = await fetch('/shop/api/cart/' + itemId, {
            method: 'DELETE',
          });

          const data = await response.json();
          if (data.success) {
            showNotification('ƒê√£ x√≥a s·∫£n ph·∫©m!', 'success');
            setTimeout(() => window.location.reload(), 1000);
          } else {
            showNotification(data.message || 'C√≥ l·ªói x·∫£y ra', 'error');
          }
        } catch (error) {
          console.error('Error removing item:', error);
          showNotification('C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m', 'error');
        } finally {
          hideLoading();
        }
      }

      async function clearCart() {
        if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng?')) return;

        showLoading();
        try {
          const response = await fetch('/shop/api/cart', {
            method: 'DELETE',
          });

          const data = await response.json();
          if (data.success) {
            showNotification('ƒê√£ x√≥a to√†n b·ªô gi·ªè h√†ng!', 'success');
            setTimeout(() => window.location.reload(), 1000);
          } else {
            showNotification(data.message || 'C√≥ l·ªói x·∫£y ra', 'error');
          }
        } catch (error) {
          console.error('Error clearing cart:', error);
          showNotification('C√≥ l·ªói x·∫£y ra khi x√≥a gi·ªè h√†ng', 'error');
        } finally {
          hideLoading();
        }
      }

      function checkout() {
        alert(
          'üéâ T√≠nh nƒÉng thanh to√°n s·∫Ω ƒë∆∞·ª£c ph√°t tri·ªÉn trong phi√™n b·∫£n ti·∫øp theo!\n\nC·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng Test Lib Cart!'
        );
      }

      function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
          type === 'success'
            ? 'bg-green-500'
            : type === 'error'
            ? 'bg-red-500'
            : 'bg-blue-500'
        } text-white`;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
          notification.remove();
        }, 3000);
      }
    </script>
  </body>
</html>
