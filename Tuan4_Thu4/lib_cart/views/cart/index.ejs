<div>
  <div class="flex justify-between items-center mb-8">
    <h1 class="text-3xl font-bold text-gray-900">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h1>
    <div class="flex space-x-4">
      <%- UIComponents.button({ 
        text: 'Ti·∫øp t·ª•c mua s·∫Øm', 
        variant: 'secondary',
        onClick: "window.location.href='/products'" 
      }) %>
      <% if (cartSummary.items.length > 0) { %>
        <%- UIComponents.button({ 
          text: 'X√≥a t·∫•t c·∫£', 
          variant: 'danger',
          onClick: 'clearCart()' 
        }) %>
      <% } %>
    </div>
  </div>

  <div class="grid lg:grid-cols-3 gap-8">
    <!-- Cart Items -->
    <div class="lg:col-span-2">
      <% if (cartSummary.items.length === 0) { %>
        <div class="text-center py-12">
          <div class="text-6xl mb-4">üõí</div>
          <h2 class="text-2xl font-semibold text-gray-600 mb-4">
            Gi·ªè h√†ng tr·ªëng
          </h2>
          <p class="text-gray-500 mb-6">
            H√£y th√™m m·ªôt s·ªë s·∫£n ph·∫©m v√†o gi·ªè h√†ng c·ªßa b·∫°n
          </p>
          <%- UIComponents.button({ 
            text: 'Kh√°m ph√° s·∫£n ph·∫©m', 
            variant: 'primary',
            onClick: "window.location.href='/products'" 
          }) %>
        </div>
      <% } else { %>
        <div class="space-y-4">
          <% cartSummary.items.forEach(item => { %>
            <div id="cart-item-<%= item._id %>" class="bg-white p-6 rounded-lg shadow">
              <div class="flex items-center space-x-4">
                <div class="flex-shrink-0">
                  <img
                    src="<%= item.image || '/placeholder-product.png' %>"
                    alt="<%= item.productName %>"
                    class="w-20 h-20 object-cover rounded-lg"
                  />
                </div>
                <div class="flex-1">
                  <h3 class="text-lg font-semibold text-gray-900">
                    <%= item.productName %>
                  </h3>
                  <p class="text-gray-600">
                    <%= item.price.toLocaleString('vi-VN') %> VNƒê
                  </p>
                </div>
                <div class="flex items-center space-x-2">
                  <%- UIComponents.button({ 
                    text: '-', 
                    size: 'sm', 
                    onClick: `updateQuantity('${item._id}', ${item.quantity - 1})` 
                  }) %>
                  <span class="px-3 py-1 bg-gray-100 rounded text-center min-w-[40px]">
                    <%= item.quantity %>
                  </span>
                  <%- UIComponents.button({ 
                    text: '+', 
                    size: 'sm', 
                    onClick: `updateQuantity('${item._id}', ${item.quantity + 1})` 
                  }) %>
                </div>
                <div class="text-right">
                  <p class="text-lg font-semibold">
                    <%= (item.price * item.quantity).toLocaleString('vi-VN') %> VNƒê
                  </p>
                  <%- UIComponents.button({ 
                    text: 'X√≥a', 
                    variant: 'danger', 
                    size: 'sm', 
                    onClick: `removeItem('${item._id}')` 
                  }) %>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
      <% } %>
    </div>

    <!-- Cart Summary -->
    <% if (cartSummary.items.length > 0) { %>
      <div class="lg:col-span-1">
        <div class="bg-white p-6 rounded-lg shadow sticky top-4">
          <h2 class="text-xl font-semibold mb-4">T·ªïng k·∫øt ƒë∆°n h√†ng</h2>
          <div class="space-y-3">
            <div class="flex justify-between">
              <span>S·ªë l∆∞·ª£ng s·∫£n ph·∫©m:</span>
              <span class="font-semibold"><%= cartSummary.totalItems %></span>
            </div>
            <div class="flex justify-between">
              <span>T·∫°m t√≠nh:</span>
              <span class="font-semibold">
                <%= cartSummary.totalPrice.toLocaleString('vi-VN') %> VNƒê
              </span>
            </div>
            <div class="flex justify-between">
              <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
              <span class="text-green-600">Mi·ªÖn ph√≠</span>
            </div>
            <hr class="my-4" />
            <div class="flex justify-between text-lg font-bold">
              <span>T·ªïng c·ªông:</span>
              <span class="text-primary-600">
                <%= cartSummary.totalPrice.toLocaleString('vi-VN') %> VNƒê
              </span>
            </div>
          </div>
          <div class="mt-6 space-y-3">
            <%- UIComponents.button({ 
              text: 'Thanh to√°n', 
              variant: 'primary',
              className: 'w-full', 
              onClick: 'checkout()' 
            }) %>
            <%- UIComponents.button({
              text: 'C·∫≠p nh·∫≠t gi·ªè h√†ng', 
              variant: 'secondary', 
              className: 'w-full',
              onClick: 'window.location.reload()' 
            }) %>
          </div>
        </div>
      </div>
    <% } %>
  </div>
</div>

<script>
  // Cart JavaScript functions
  async function updateQuantity(itemId, newQuantity) {
    if (newQuantity <= 0) {
      removeItem(itemId);
      return;
    }

    try {
      const response = await fetch('/cart/api/cart/' + itemId, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ quantity: newQuantity }),
      });

      const data = await response.json();
      if (data.success) {
        window.location.reload();
      } else {
        alert(data.message || 'C√≥ l·ªói x·∫£y ra');
      }
    } catch (error) {
      console.error('Error updating quantity:', error);
      alert('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng');
    }
  }

  async function removeItem(itemId) {
    if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y?')) return;

    try {
      const response = await fetch('/cart/api/cart/' + itemId, {
        method: 'DELETE',
      });

      const data = await response.json();
      if (data.success) {
        window.location.reload();
      } else {
        alert(data.message || 'C√≥ l·ªói x·∫£y ra');
      }
    } catch (error) {
      console.error('Error removing item:', error);
      alert('C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m');
    }
  }

  async function clearCart() {
    if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a to√†n b·ªô gi·ªè h√†ng?')) return;

    try {
      const response = await fetch('/cart/api/cart', {
        method: 'DELETE',
      });

      const data = await response.json();
      if (data.success) {
        window.location.reload();
      } else {
        alert(data.message || 'C√≥ l·ªói x·∫£y ra');
      }
    } catch (error) {
      console.error('Error clearing cart:', error);
      alert('C√≥ l·ªói x·∫£y ra khi x√≥a gi·ªè h√†ng');
    }
  }

  function checkout() {
    alert('T√≠nh nƒÉng thanh to√°n s·∫Ω ƒë∆∞·ª£c ph√°t tri·ªÉn trong phi√™n b·∫£n ti·∫øp theo!');
  }
</script>
